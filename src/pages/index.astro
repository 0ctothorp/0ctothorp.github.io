---
import { Picture } from "@astrojs/image/components";
import { Icon } from "astro-icon";

import Layout from "../layouts/Layout.astro";
import img from "../assets/voices.png";

// TODO:
// Odtwarzacz powinien być w osobnym fixed elemencie, a nie w środku animowanego play buttona.
// To ułatwi mi reużycie tych samych elementów na mobile.
---

<Layout>
  <style>
    .gradient {
      background: rgb(10, 9, 8);
      background: linear-gradient(
        0deg,
        rgba(10, 9, 8, 1) 0%,
        rgba(255, 255, 255, 0) 80%
      );
    }
    #play {
      clip-path: polygon(10% 10%, 90% 50%, 90% 50%, 10% 90%);
      background-color: rgba(255, 255, 255, 0.4);
      -webkit-backdrop-filter: blur(3px);
      backdrop-filter: blur(3px);
      transform: translate(calc(50vw - 50%), calc(150px - 50%));
      transition: opacity 300ms ease-in;
    }

    #play.expanded {
      clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
      width: 100vw;
      height: 100vh;
      background-color: rgba(0, 0, 0, 0.6);
      transform: translate(0, 0);
      transition: clip-path 1s, width 1s 1s, height 1s 1s, opacity 300ms ease-in,
        background-color 1s, transform 1s 1.3s;
    }

    #play.expanded,
    #play.shrinking {
      opacity: 1;
    }

    #play.shrinking {
      transition: transform 1s, width 1s 0.3s, height 1s 0.3s, clip-path 1s 1.3s,
        opacity 300ms ease-in, background-color 1s 1.3s;
    }

    #play-button-hover-zone:hover #play:not(.expanded) {
      opacity: 1;
    }
  </style>

  <div class="">
    <div
      class:list={[
        "relative",
        "overflow-hidden",
        "flex justify-center items-center",
        "h-[200px] sm:h-[300px]",
      ]}
    >
      <Picture
        src={img}
        widths={[512, 1024]}
        sizes="(max-width: 640px) 512px, 1024px"
        alt="pic"
      />
      <div class="gradient h-full absolute inset-0"></div>
      <div id="play-button-hover-zone" class="absolute inset-0">
        <div
          id="play"
          class:list={[
            "w-28",
            "h-28",
            "sm:w-36",
            "sm:h-36",
            "opacity-0",
            "fixed",
            "overflow-hidden",
            "hover:cursor-pointer",
          ]}
        >
          <div
            id="youtube-embed-wrapper"
            class="opacity-0 transition-opacity duration-500 w-full h-full flex flex-col"
          >
            <div id="iframe-wrapper" class="p-[2%] overflow-hidden">
              <div
                id="player-wrapper"
                class="aspect-video overflow-hidden max-h-full m-auto"
              >
              </div>
            </div>
            <button
              type="button"
              class="text-white mx-auto my-2 pointer-events-none w-9"
              ><Icon name="vaadin:close" /></button
            >
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    import { wait } from "../utils";

    const play = document.querySelector("#play") as HTMLDivElement;

    const embedWrapper = document.querySelector(
      "#youtube-embed-wrapper"
    ) as HTMLDivElement;
    const playerWrapper = document.querySelector(
      "#player-wrapper"
    ) as HTMLDivElement;

    const closeButton = embedWrapper.querySelector("button")!;

    play.onclick = async () => {
      if (play.classList.contains("expanded")) return;

      play.classList.remove("hover:cursor-pointer");
      play.classList.add("expanded");

      await wait(2001);

      const { width, height } = playerWrapper.getBoundingClientRect();

      playerWrapper.innerHTML = `
        <iframe 
          width=${Math.floor(width)} 
          height=${Math.floor(height)} 
          src="https://www.youtube-nocookie.com/embed/c8Gsh5oOWNE?autoplay=1&enablejsapi=1&modestbranding=1&rel=0" 
          title="Voices From the Abyss" 
          frameborder="0" 
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
          allowfullscreen>
        </iframe>`;

      await wait(100);

      embedWrapper.style.opacity = "1";
      closeButton.classList.add("pointer-events-auto");
    };

    closeButton.onclick = async (e) => {
      e.stopPropagation();

      play.classList.remove("expanded");
      play.classList.add("shrinking", "hover:cursor-pointer");
      play.dataset.shrinking = "1";

      playerWrapper.innerHTML = "";
      embedWrapper.style.opacity = "0";
      closeButton.classList.remove("pointer-events-auto");

      await wait(2300);

      play.classList.remove("shrinking");
    };
  </script>
</Layout>
